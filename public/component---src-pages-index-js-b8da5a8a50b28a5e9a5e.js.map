{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Call.js"],"names":["query","Home","props","markdown","data","allMarkdownRemark","edges","json","allFeaturesJson","bodyClass","title","name","content","className","button","map","edge","key","node","frontmatter","path","to","excerpt","id","image","src","withPrefix","description","Call","href","site","siteMetadata","contact","phone","email","render"],"mappings":"2FAAA,2IAuEaA,EAAK,YA+BHC,UA/FF,SAACC,GACV,IAAMC,EAAWD,EAAME,KAAKC,kBAAkBC,MACxCC,EAAOL,EAAME,KAAKI,gBAAgBF,MACxC,OACI,kBAAC,IAAD,CAAQG,UAAU,aACd,kBAAC,IAAD,CAAKC,MAAM,YACX,kBAAC,IAAD,KACI,0BACIC,KAAK,cACLC,QAAQ,yKAGhB,yBAAKC,UAAU,cACX,yBAAKA,UAAU,aACX,6EACA,sGAGR,yBAAKA,UAAU,kBACX,kBAAC,IAAD,CAAMC,QAAM,KAEhB,yBAAKD,UAAU,2BACX,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,0BAAd,gBAEHV,EAASY,KAAI,SAACC,GAAD,OACV,yBAAKC,IAAKD,EAAKE,KAAKC,YAAYC,KAAMP,UAAU,wBAC5C,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,gBACX,4BACI,kBAAC,IAAD,CAAMQ,GAAIL,EAAKE,KAAKC,YAAYC,MAAOJ,EAAKE,KAAKC,YAAYT,QAEjE,2BAAIM,EAAKE,KAAKI,iBAOtC,yBAAKT,UAAU,uCACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,0BAAd,eAEHN,EAAKQ,KAAI,SAACC,GAAD,OACN,yBAAKC,IAAKD,EAAKE,KAAKK,GAAIV,UAAU,iCAC9B,yBAAKA,UAAU,WACVG,EAAKE,KAAKM,OACP,yBAAKX,UAAU,iBACX,yBAAKY,IAAKC,YAAWV,EAAKE,KAAKM,UAGvC,wBAAIX,UAAU,iBAAiBG,EAAKE,KAAKR,OACzC,yBAAKG,UAAU,mBAAmBG,EAAKE,KAAKS,uB,kCC7D5E,qCAGMC,EAAO,SAAC1B,GAAD,OACT,yBAAKW,UAAU,QACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,cACX,6CACA,uBAAGgB,KAAI,OAAS3B,EAAME,KAAK0B,KAAKC,aAAaC,QAAQC,OAChD/B,EAAME,KAAK0B,KAAKC,aAAaC,QAAQC,QAG9C,yBAAKpB,UAAU,cACX,2CACA,uBAAGgB,KAAI,UAAY3B,EAAME,KAAK0B,KAAKC,aAAaC,QAAQE,OACnDhC,EAAME,KAAK0B,KAAKC,aAAaC,QAAQE,SAIjDhC,EAAMY,QACH,yBAAKD,UAAU,mBACX,kBAAC,IAAD,CAAMQ,GAAG,WAAWR,UAAU,UAA9B,gBAQD,aAACX,GAAD,OACX,kBAAC,IAAD,CACIF,MAAK,aAcLmC,OAAQ,SAAC/B,GAAD,OAAU,kBAACwB,EAAD,CAAMd,OAAQZ,EAAMY,OAAQV,KAAMA","file":"component---src-pages-index-js-b8da5a8a50b28a5e9a5e.js","sourcesContent":["import React from 'react';\nimport { graphql, withPrefix, Link } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport SEO from '../components/SEO';\nimport Layout from '../layouts/index';\nimport Call from '../components/Call';\n\nconst Home = (props) => {\n    const markdown = props.data.allMarkdownRemark.edges;\n    const json = props.data.allFeaturesJson.edges;\n    return (\n        <Layout bodyClass=\"page-home\">\n            <SEO title=\"Главная\" />\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Small Business Theme. Multiple content types using Markdown and JSON sources. Responsive design and SCSS. This is a beautiful and artfully designed starting theme.\"\n                />\n            </Helmet>\n            <div className=\"intro pb-4\">\n                <div className=\"container\">\n                    <h1>Полный комплекс услуг по переплёту документов</h1>\n                    <p>Мы делаем это качественно. Сделайте качественный перелёт уже сегодня.</p>\n                </div>\n            </div>\n            <div className=\"container pt-2\">\n                <Call button />\n            </div>\n            <div className=\"container pt-8 pt-md-10\">\n                <div className=\"row justify-content-start\">\n                    <div className=\"col-12\">\n                        <h2 className=\"title-3 text-dark mb-3\">Наши услуги</h2>\n                    </div>\n                    {markdown.map((edge) => (\n                        <div key={edge.node.frontmatter.path} className=\"col-12 col-md-4 mb-1\">\n                            <div className=\"card service service-teaser\">\n                                <div className=\"card-content\">\n                                    <h2>\n                                        <Link to={edge.node.frontmatter.path}>{edge.node.frontmatter.title}</Link>\n                                    </h2>\n                                    <p>{edge.node.excerpt}</p>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"container pt-5 pb-5 pt-md-7 pb-md-7\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12\">\n                        <h2 className=\"title-3 text-dark mb-4\">Почему нас</h2>\n                    </div>\n                    {json.map((edge) => (\n                        <div key={edge.node.id} className=\"col-12 col-md-6 col-lg-4 mb-2\">\n                            <div className=\"feature\">\n                                {edge.node.image && (\n                                    <div className=\"feature-image\">\n                                        <img src={withPrefix(edge.node.image)} />\n                                    </div>\n                                )}\n                                <h2 className=\"feature-title\">{edge.node.title}</h2>\n                                <div className=\"feature-content\">{edge.node.description}</div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query {\n        allMarkdownRemark(\n            filter: { fileAbsolutePath: { regex: \"/services/\" } }\n            sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        path\n                        title\n                        date(formatString: \"DD MMMM YYYY\")\n                    }\n                    excerpt\n                }\n            }\n        }\n        allFeaturesJson {\n            edges {\n                node {\n                    id\n                    title\n                    description\n                    image\n                }\n            }\n        }\n    }\n`;\n\nexport default Home;\n","import React from 'react';\nimport { StaticQuery, graphql, Link } from 'gatsby';\n\nconst Call = (props) => (\n    <div className=\"call\">\n        <div className=\"call-box-top\">\n            <div className=\"call-phone\">\n                <strong>Телефон: </strong>\n                <a href={`tel:${props.data.site.siteMetadata.contact.phone}`}>\n                    {props.data.site.siteMetadata.contact.phone}\n                </a>\n            </div>\n            <div className=\"call-email\">\n                <strong>Почта: </strong>\n                <a href={`mailto:${props.data.site.siteMetadata.contact.email}`}>\n                    {props.data.site.siteMetadata.contact.email}\n                </a>\n            </div>\n        </div>\n        {props.button && (\n            <div className=\"call-box-bottom\">\n                <Link to=\"/contact\" className=\"button\">\n                    Связаться\n                </Link>\n            </div>\n        )}\n    </div>\n);\n\nexport default (props) => (\n    <StaticQuery\n        query={graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        contact {\n                            email\n                            phone\n                        }\n                    }\n                }\n            }\n        `}\n        render={(data) => <Call button={props.button} data={data} />}\n    />\n);\n"],"sourceRoot":""}